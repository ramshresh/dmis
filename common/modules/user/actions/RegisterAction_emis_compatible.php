<?php
/**
 * Created by PhpStorm.
 * User: User
 * Date: 4/10/2015
 * Time: 4:48 AM
 */

namespace common\modules\user\actions;

use yii;
use common\components\MyBaseAction;
use yii\helpers\Json;

class RegisterAction extends MyBaseAction{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * registration api action
     */
    public function run()
    {


        /** @var \common\modules\user\models\User    $user */
        /** @var \common\modules\user\models\Profile $profile */
        /** @var \common\modules\user\models\Role    $role */

        // set up new user/profile objects
        $user    = Yii::$app->getModule("user")->model("User", ["scenario" => "register"]);
        $profile = Yii::$app->getModule("user")->model("Profile");

        // load post data
        $post = Yii::$app->request->post();
        if ($user->load($post)) {
            // ensure profile data gets loaded
            $profile->load($post);
            // validate for normal request
            if ($user->validate() && $profile->validate()) {
                // perform registration
                $role = Yii::$app->getModule("user")->model("Role");
                $user->setRegisterAttributes($role::ROLE_USER, Yii::$app->request->userIP)->save(false);
                $profile->setUser($user->id)->save(false);
                $this->afterRegister($user);
                // set flash
                // don't use $this->refresh() because user may automatically be logged in and get 403 forbidden
                $successText = Yii::t("user", "Successfully registered [ {displayName} ]", ["displayName" => $user->getDisplayName()]);
                $guestText = "";
                if (Yii::$app->user->isGuest) {
                    $guestText = Yii::t("user", " - Please check your email to confirm your account");
                }
                // SUCCESS : saved
                echo Json::encode($user);
                Yii::$app->end();
            }else{
                // ERROR : validation
                //Well, it means model validation failed!
                // Errors occurred
                $msg = array();
                $msg["status"] = 0;
                $msg["title"] = "ERROR";
                $msg["type"] = "MODEL_VALIDATION_ERROR";
                $msg["message"] = sprintf("Couldn't save user");
                $errs = array();
                foreach ($user->errors as $attribute => $attr_errors) {
                    $err_attr = array();
                    $err_attr["attribute"]=$attribute;
                    $err_attr["message"] = array();
                    foreach ($attr_errors as $attr_error) {
                        array_push($err_attr["message"], $attr_error);
                    }
                    array_push($errs,$err_attr);
                }
                $msg["errors"]=$errs;
                //$this -> _sendResponse(500, CJSON::encode($msg));
                echo Json::encode($msg);
                Yii::$app->end();
            }
        }else{
            // ERROR : could not load model
        }
    }

    /**
     * Process data after registration
     *
     * @param \common\modules\user\models\User $user
     */
    protected function afterRegister($user)
    {
        /** @var \common\modules\user\models\UserKey $userKey */

        // determine userKey type to see if we need to send email
        $userKey = Yii::$app->getModule("user")->model("UserKey");
        if ($user->status == $user::STATUS_INACTIVE) {
            $userKeyType = $userKey::TYPE_EMAIL_ACTIVATE;
        } elseif ($user->status == $user::STATUS_UNCONFIRMED_EMAIL) {
            $userKeyType = $userKey::TYPE_EMAIL_CHANGE;
        } else {
            $userKeyType = null;
        }
        // check if we have a userKey type to process, or just log user in directly
        if ($userKeyType) {
            // generate userKey and send email
            $userKey = $userKey::generate($user->id, $userKeyType);
            if (!$numSent = $user->sendEmailConfirmation($userKey)) {
                // handle email error
                Yii::$app->session->setFlash("Email-error", "Failed to send email");

            }
        } else {
            Yii::$app->user->login($user, Yii::$app->getModule("user")->loginDuration);
        }
    }
}