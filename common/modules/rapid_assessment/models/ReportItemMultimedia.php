<?php

namespace common\modules\rapid_assessment\models;

use Imagine\Image\Box;
use Yii;
use yii\helpers\Url;
use zxbodya\yii2\galleryManager\GalleryBehavior;

/**
 * This is the model class for table "rapid_assessment.report_item_multimedia".
 *
 * @property string $id
 * @property string $report_item_id
 * @property string $type
 * @property string $title
 * @property string $extension
 * @property string $thumbnail_url
 * @property string $description
 * @property double $latitude
 * @property double $longitude
 * @property string $url
 * @property string $path
 * @property string $timestamp_taken_at
 * @property string $caption
 * @property integer $resolution_x
 * @property integer $resolution_y
 * @property integer $size_bytes
 * @property boolean $is_verified
 * @property string $tags
 * @property string $meta_hstore
 * @property string $meta_json
 *
 * @property ReportItem $reportItem
 */
class ReportItemMultimedia extends \yii\db\ActiveRecord
{
    public $file;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'rapid_assessment.report_item_multimedia';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['file'], 'file','maxFiles' => 10],
            [['report_item_id', 'resolution_x', 'resolution_y', 'size_bytes'], 'integer'],
            [['thumbnail_url', 'url', 'path', 'tags', 'meta_hstore', 'meta_json'], 'string'],
            [['latitude', 'longitude'], 'number'],
            [['timestamp_taken_at'], 'safe'],
            [['is_verified'], 'boolean'],
            [['type', 'title', 'extension', 'description', 'caption'], 'string', 'max' => 255]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'report_item_id' => Yii::t('app', 'Report Item ID'),
            'type' => Yii::t('app', 'Type'),
            'title' => Yii::t('app', 'Title'),
            'extension' => Yii::t('app', 'Extension'),
            'thumbnail_url' => Yii::t('app', 'Thumbnail Url'),
            'description' => Yii::t('app', 'Description'),
            'latitude' => Yii::t('app', 'Latitude'),
            'longitude' => Yii::t('app', 'Longitude'),
            'url' => Yii::t('app', 'Url'),
            'path' => Yii::t('app', 'Path'),
            'timestamp_taken_at' => Yii::t('app', 'Timestamp Taken At'),
            'caption' => Yii::t('app', 'Caption'),
            'resolution_x' => Yii::t('app', 'Resolution X'),
            'resolution_y' => Yii::t('app', 'Resolution Y'),
            'size_bytes' => Yii::t('app', 'Size Bytes'),
            'is_verified' => Yii::t('app', 'Is Verified'),
            'tags' => Yii::t('app', 'Tags'),
            'meta_hstore' => Yii::t('app', 'Meta Hstore'),
            'meta_json' => Yii::t('app', 'Meta Json'),
            'file' => Yii::t('app', 'File'),
        ];
    }
    public function behaviors()
    {
        return [
            'galleryBehavior' => [
                'class' => GalleryBehavior::className(),
                'type' => 'report_item_multimedia',
                'extension' => 'jpg',
                'directory' => Yii::getAlias('@uploads') . '/images/report_item_multimedia/gallery',
                'url' => Url::to(['/uploads/images/report_item_multimedia/gallery']),
                'versions' => [
                    'small' => function ($img) {
                        /** @var ImageInterface $img */
                        return $img
                            ->copy()
                            ->thumbnail(new Box(200, 200));
                    },
                    'medium' => function ($img) {
                        /** @var ImageInterface $img */
                        $dstSize = $img->getSize();
                        $maxWidth = 800;
                        if ($dstSize->getWidth() > $maxWidth) {
                            $dstSize = $dstSize->widen($maxWidth);
                        }
                        return $img
                            ->copy()
                            ->resize($dstSize);
                    },
                ]
            ]
        ];
    }
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getReportItem()
    {
        return $this->hasOne(ReportItem::className(), ['id' => 'report_item_id']);
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub

        echo 'after'.json_encode($this->attributes);
        Yii::$app->end();
        $fileName=$this->file->tempName;
        $this->getBehavior('galleryBehavior')->addImage($fileName);
    }


}
